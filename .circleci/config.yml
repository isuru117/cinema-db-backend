version: 2.1
defaults: &defaults
  working_directory: ~/repo
orbs:
  aws-cli: circleci/aws-cli@2.0.3
commands:
  docker-build:
    steps:
      - run:
          name: build docker image
          command: docker build -t ${IMAGE_NAME}:${CIRCLE_SHA1} .
jobs:
  build:
    <<: *defaults
    docker:
      - image: circleci/node:14.7
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run: npm ci
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: npm run lint
      - run: npm run test
      - docker-build
  deploy:
    <<: *defaults
    machine: true
    steps:
      - checkout
      - docker-build
      - run:
          name: login to docker
          command: echo "${DOCKER_PASS}" | docker login --username ${DOCKER_USER} --password-stdin
      - run:
          name: push to docker hub
          command: docker push ${IMAGE_NAME}:${CIRCLE_SHA1}
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-region: AWS_DEFAULT_REGION
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
      - run:
          name: Open port 22 on EC2 instance
          command: |
            PUBLIC_IP=$(curl ipinfo.io/ip)
            aws ec2 authorize-security-group-ingress --region $AWS_DEFAULT_REGION --group-id $SG_ID \
              --protocol tcp --port 22 --cidr $PUBLIC_IP/24
      - run:
          name: copy docker-compose.yml to ec2 instance
          command: |
            scp ~/repo/docker-compose.yml ${EC2_USERNAME}@${EC2_PUBLIC_DNS}:${EC2_DEPLOY_PATH}
      - run:
          name: ssh and run docker-compose
          command: |
            ssh -o StrictHostKeyChecking=no ${EC2_USERNAME}@${EC2_PUBLIC_DNS} \
            MONGO_DB_URI=${MONGO_DB_URI} TAG_VERSION=${CIRCLE_SHA1} sudo -E docker-compose up --detach --remove-orphans
      - run:
          name: Close port 22 on EC2 instance
          command: |
            PUBLIC_IP=$(curl ipinfo.io/ip)
            aws ec2 revoke-security-group-ingress --region $AWS_DEFAULT_REGION --group-id $SG_ID \
              --protocol tcp --port 22 --cidr $PUBLIC_IP/24
workflows:
  main-workflow:
    jobs:
      - build:
          filters:
            branches:
              ignore: main
      - deploy:
          filters:
            branches:
              only: main