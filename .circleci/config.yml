version: 2.1
defaults: &defaults
  working_directory: ~/repo
orbs:
  aws-cli: circleci/aws-cli@2.0.3
  terraform: circleci/terraform@3.0.0
commands:
  docker-build:
    steps:
      - checkout
      - run:
          name: build docker image
          command: docker build -t ${IMAGE_NAME}:${CIRCLE_SHA1} .
jobs:
  build:
    <<: *defaults
    machine: true
    steps:
      - docker-build
  deploy-infrastructure:
    <<: *defaults
    executor: terraform/default
    steps:
      - checkout
      - run:
          name: "Create .terraformrc file locally"
          command: echo "credentials \"app.terraform.io\" {token = \"$TERRAFORM_TOKEN\"}" > $HOME/.terraformrc
      - run:
          name: "Create .terraformrc file locally"
          command: echo "aws_access_key=$AWS_ACCESS_KEY_ID,aws_secret_key=$AWS_SECRET_ACCESS_KEY"
      - terraform/validate:
          path: "./terraform"
      - terraform/init:
          backend: true
          path: "./terraform"
      - terraform/plan:
          var: aws_access_key=$AWS_ACCESS_KEY_ID,aws_secret_key=$AWS_SECRET_ACCESS_KEY
          var_file: terraform.tfvars
          path: "./terraform"
      - terraform/apply:
          var: aws_access_key=$AWS_ACCESS_KEY_ID,aws_secret_key=$AWS_SECRET_ACCESS_KEY
          var_file: terraform.tfvars
          path: "./terraform"
  deploy-build:
    <<: *defaults
    machine: true
    steps:
      - docker-build
      - run:
          name: login to docker
          command: echo "${DOCKER_PASS}" | docker login --username ${DOCKER_USER} --password-stdin
      - run:
          name: push to docker hub
          command: docker push ${IMAGE_NAME}:${CIRCLE_SHA1}
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-region: AWS_DEFAULT_REGION
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
      - run:
          name: copy docker-compose.yml to ec2 instance
          command: |
            scp ~/repo/docker-compose.yml ${EC2_USERNAME}@${EC2_PUBLIC_DNS}:${EC2_DEPLOY_PATH}
      - run:
          name: ssh and run docker-compose
          command: |
            ssh -o StrictHostKeyChecking=no ${EC2_USERNAME}@${EC2_PUBLIC_DNS} \
            MONGO_DB_URI=${MONGO_DB_URI} APP_PORT=${APP_PORT} TAG_VERSION=${CIRCLE_SHA1} sudo -E docker-compose up --detach --remove-orphans
workflows:
  main-workflow:
    jobs:
      - build:
          filters:
            branches:
              ignore: main
      - deploy-infrastructure:
          filters:
            branches:
              only: main
      - deploy-build:
          filters:
            branches:
              only: main
          requires:
            - deploy-infrastructure